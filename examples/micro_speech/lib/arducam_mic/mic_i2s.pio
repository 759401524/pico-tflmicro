.program mic_i2s
.side_set 2
		;   /-- LRCLK
		;   |/--BCLK
public entry_point:
    nop       		 side 0b10
    set x, 7         side 0b00  
noploop1:          
	nop               side 0b01
	jmp x-- noploop1  side 0b00
    set x, 7          side 0b00
bitloop1:
    in pins,  1       side 0b01
	jmp x-- bitloop1  side 0b00
    set x, 7          side 0b10
noploop2:
    nop      		  side 0b11
    jmp x-- noploop2  side 0b10
    set x, 7          side 0b10
bitloop2:
    in pins,    1  	  side 0b11
    jmp x-- bitloop2  side 0b10
    




% c-sdk {
void mic_i2s_program_init(PIO pio, uint sm, uint offset, uint8_t LRclk_pin, uint8_t clock_pin, uint data_pin) {
	pio_sm_set_consecutive_pindirs(pio, sm, data_pin, 1, false);
    pio_sm_set_consecutive_pindirs(pio, sm, clock_pin, 1, true);
	pio_sm_set_consecutive_pindirs(pio, sm, LRclk_pin, 1, true);
	pio_sm_config c = mic_i2s_program_get_default_config(offset);
	sm_config_set_in_pins(&c, data_pin);
	sm_config_set_sideset_pins(&c, clock_pin);
	sm_config_set_sideset_pins(&c, LRclk_pin);
	sm_config_set_in_shift(&c, false, true, 16);
	sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);
	pio_sm_init(pio, sm, offset, &c);
	pio_sm_exec(pio, sm, pio_encode_jmp(offset + mic_i2s_offset_entry_point));
	pio_sm_set_enabled(pio, sm, true);
}
%}
